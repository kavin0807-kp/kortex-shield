worker_processes 1;

events {
    worker_connections 1024;
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    upstream kortex_shield_api {
        server kortex-shield:8000;
    }

    server {
        listen 80;
        
        mirror /_mirror;
        mirror_request_body on;

        #The lines below are commented out for easier testing in cloud environments.
        #Remove the '#' to re-enable password protection.
        auth_basic "Admin Area";
        auth_basic_user_file /etc/nginx/auth/.htpasswd;

        location / {
            resolver 127.0.0.11; 

            set $target_app http://tomcat-app1:8080;

            if ($http_x_app = "app2") { set $target_app http://tomcat-app2:8080; }
            if ($http_x_app = "app3") { set $target_app http://tomcat-app3:8080; }
            if ($arg_app = "app2") { set $target_app http://tomcat-app2:8080; }
            if ($arg_app = "app3") { set $target_app http://tomcat-app3:8080; }

            proxy_pass $target_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location = /_mirror {
            internal;
            proxy_pass http://kortex_shield_api/analyze;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Original-Method $request_method;
            proxy_set_header X-Original-URI $request_uri;
            proxy_pass_request_body on;
        }
    }
}